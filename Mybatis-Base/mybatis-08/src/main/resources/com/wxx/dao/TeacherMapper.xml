<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace : 绑定一个对应的Dao/Mapper接口 -->
<!-- namespace中的包名要和Mapper接口的包名一致 -->
<mapper namespace="com.wxx.dao.TeacherMapper">

    <!-- 不能出现id相同的标签 -->
    <!--<select id="getTeacher" resultType="Teacher">-->
    <!--    select * from mybatis.teacher;-->
    <!--</select>-->

    <!--=======================================================-->

    <!--
        思路：联表查询(按照结果嵌套处理)   常用
    -->
    <select id="getTeacher2" resultMap="TS2">
        select s.id sid, s.name sname, t.name tname, t.id tid
        from student s,teacher t
        where s.tid = t.id and t.id = #{tid}
    </select>
    <resultMap id="TS2" type="Teacher">
        <!-- 数据库中查询出来的tid(别名)对应Teacher(pojo)中的id -->
        <result property="id" column="tid"/>
        <!-- 数据库中查询出来的tname(别名)对应Teacher(pojo)中的name -->
        <result property="name" column="tname"/>
        <!--
            复杂的属性，需要单独处理：
                对象：association
                集合：collection
            javaType : 指定属性的类型
            ofType : 集合中的泛型信息，使用ofType获取
        -->
        <collection property="students" javaType="ArrayList" ofType="Student">
            <!-- 数据库中查询出来的sid(别名)对应Student(pojo)中的id -->
            <result property="id" column="sid"/>
            <!-- 数据库中查询出来的sname(别名)对应Student(pojo)中的name -->
            <result property="name" column="sname"/>
            <!-- 数据库中查询出来的tid(别名)对应Student(pojo)中的tid -->
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>




    <!--======================================================-->
    <!--
        思路：子查询(按照查询嵌套处理)
            (1) 查询老师的信息;
            (2) 根据查询出来的老师的id，寻找老师的学生
    -->
    <select id="getTeacher" resultMap="TS">
        select * from mybatis.teacher where id = #{tid};
    </select>
    <!-- 这里的tid是怎么传递过来的？因为这只有一个属性，可以写任何内容 -->
    <select id="getStudentByTeacherId" resultType="Student">
        select * from mybatis.student where tid = #{notTid};
    </select>
    <resultMap id="TS" type="Teacher">
        <!-- 传入的tid 对应Teacher(pojo)中的id,如果没有这句话，最终查出来的id=0,虽然我们传入的是1 -->
        <result property="id" column="id"/>
        <!-- 数据库中查询出来的name对应Teacher(pojo)中的name -->
        <result property="name" column="name"/>
        <!-- 返回的是集合，集合中的每个数据是学生 -->
        <collection property="students" column="id" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId"/>
    </resultMap>

</mapper>